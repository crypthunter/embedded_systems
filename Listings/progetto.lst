C51 COMPILER V9.57.0.0   PROGETTO                                                          06/08/2018 11:54:21 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE PROGETTO
OBJECT MODULE PLACED IN .\Objects\progetto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE progetto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -progetto.lst) TABS(2) OBJECT(.\Objects\progetto.obj)

line level    source

   1          #include <c8051f020.h> // SFR definitions
   2          //bottone e led
   3          sbit button = P3^7;
   4          sbit led = P0^6;
   5          //contatore per il timer1
   6          unsigned char t1overFlow = 0;
   7          // 0 = bottone non premuto, 1 = bottone premuto
   8          unsigned char premuto = 0;
   9          //se è passato più di un secondo da quando il bottone è stato premuto
  10          unsigned char unSec = 0;
  11          //variabile per decidere se il led deve lampeggiare ( molto velocemente così da sembrare ad una luminosità
             - differente)
  12          //oppure restare spento
  13          unsigned char acceso = 1;
  14          //variabile per controllare la luminosità
  15          unsigned char lumi;
  16          void init (void) {
  17   1        //abilita iinterrupt globali
  18   1        EA = 1;
  19   1        //disabilita watchdog timer
  20   1        WDTCN = 0xde;
  21   1        WDTCN = 0xad; 
  22   1        //oscillatore
  23   1        OSCICN &= 0x14;
  24   1        //clock interno
  25   1        XBR0=0x00;
  26   1        //crossbar, gestisce i pin
  27   1        XBR1 = 0x00;
  28   1        XBR2=0x40;
  29   1        //push-pull
  30   1        P1MDOUT |= 0x40;
  31   1        //push pull display
  32   1        P0MDOUT |= 0x40;
  33   1        //per l'interrupt del bottone
  34   1        EIE2 |= 0x20;
  35   1        //iinterrupt del smbus
  36   1        EIE1 |= 0x02;
  37   1        //abilita smbus
  38   1        ENSMB = 1;
  39   1      }
  40          
  41          //resetta il timer 2 senza fermarlo
  42          void resetTimer2()
  43          {
  44   1        TF2 = 0;
  45   1        TH2 = 0xf9;
  46   1        TL2 = 0x7e; 
  47   1      }
  48          
  49          void setLumi()
  50          {
  51   1        resetTimer2();
  52   1        TR2 = 1;
  53   1      }
C51 COMPILER V9.57.0.0   PROGETTO                                                          06/08/2018 11:54:21 PAGE 2   

  54          
  55          //quando il timer va in iinterrupt sono passati 200 ms, incrementa di poco la luminosità del led
  56          void timer2() interrupt 5
  57          {
  58   1        char lumiStep = 1;
  59   1        lumi = lumi + lumiStep;
  60   1        resetTimer2();
  61   1      }
  62          
  63          //resetta il timer per contare 200ms, e t1overFlow a 0 per contare 1s
  64          void resetTimer1()
  65          {
  66   1          t1overFlow = 0;
  67   1          TF1 = 0;
  68   1          TH1 = 0x7d;
  69   1          TL1 = 0xcb; 
  70   1          TR1 = 0;
  71   1      }
  72          
  73          //imposta il necessario per il programma
  74          void pwm_setup()
  75          {
  76   1        //timer 0 a 8 bbit, timer 1 a 16 bbit
  77   1        TMOD = 0x10;
  78   1        //clock intero per il timer0
  79   1        CKCON = 0x8;
  80   1        //luminosità iniziale del led, 0 = luminosità massima
  81   1        lumi = 100;
  82   1        //abilita gli iinterrupt di timer0, timer1 e timer2
  83   1        ET0 = 1;
  84   1        ET1 = 1;
  85   1        ET2 = 1;
  86   1        //imposta il valore iniziale del timer 1 (conta 200 ms)
  87   1        TH1 = 0x7d;
  88   1        TL1 = 0xcb;
  89   1        //fa partire il timer 0 che gestisce pwm
  90   1        TR0 = 1;
  91   1      }
  92           
  93          //iinterrupt del timer0
  94          void timer0() interrupt 1
  95          {
  96   1        //il led lampeggia solo se la variabile è a 1
  97   1        if (acceso == 1)
  98   1        {
  99   2          if (!led) { 
 100   3            led = 1;    // cambia stato led
 101   3            TH0 = lumi; 
 102   3            TF0 = 0;    //pulisce flag interrput
 103   3          }
 104   2          else {      
 105   3            led = 0;
 106   3            TH0 = 255 - lumi; 
 107   3            TF0 = 0;
 108   3          }
 109   2        }
 110   1      }
 111          
 112          void buttonInt() interrupt 19
 113          {
 114   1        //se non stavo premendo il bottone e lo premo
 115   1        if(premuto == 0)
C51 COMPILER V9.57.0.0   PROGETTO                                                          06/08/2018 11:54:21 PAGE 3   

 116   1        {
 117   2          //fa partire il timer che deve contare 1 secondo
 118   2          TR1 = 1;
 119   2          //resetta l'interrupt
 120   2          EIE2 |= 0x20;
 121   2          P3IF &= 0x7f;
 122   2          //cambia in rising edge per avere un interruptt al rilascio del bottone
 123   2          P3IF |= 0x08;
 124   2          premuto = 1;
 125   2        }
 126   1        //se sto premendo il bottone e quando rilascio non è passato un secondo, deve cambiare lo stato del led
 127   1        else if (premuto == 1 && unSec == 0)
 128   1        {
 129   2          //resetto l'interrupt
 130   2          EIE2 |= 0x20;
 131   2          P3IF &= 0x7f;
 132   2          //rimette in falling edge il bottone
 133   2          P3IF &= 0x77;
 134   2          //cambio stato led
 135   2          acceso = !acceso;
 136   2          led = 0;
 137   2          premuto = 0;
 138   2          unSec = 0;
 139   2          //resetto e disabilito il timer
 140   2          resetTimer1();
 141   2        }
 142   1        //se lascio il bottone ma è passato più di un secondo
 143   1        else if (premuto == 1 && unSec == 1)
 144   1        {
 145   2          //devo fermare il timer2 usato per regolare la luminosità
 146   2          TR2 = 0;
 147   2          resetTimer2();
 148   2          premuto = 0;
 149   2          unSec = 0;
 150   2          //resetta e disabilito il timer
 151   2          resetTimer1();
 152   2          //resetta l'interrupt
 153   2          EIE2 |= 0x20;
 154   2          P3IF &= 0x7f;
 155   2          //rimette in falling edge il bottone
 156   2          P3IF &= 0x77;
 157   2        }
 158   1      }
 159          
 160          void timer1() interrupt 3
 161          {
 162   1        t1overFlow++;
 163   1        //se il contatore è a 5 significa che è passato 1 secondo
 164   1        if(t1overFlow == 5)
 165   1        {
 166   2          //fermo il timer
 167   2          resetTimer1();
 168   2          unSec = 1;
 169   2          //imposto la luminosità solo se il bottone è acceso
 170   2          if (acceso == 1)
 171   2          {
 172   3            setLumi();
 173   3          }
 174   2        }
 175   1        else
 176   1        {
 177   2          TF1 = 0;
C51 COMPILER V9.57.0.0   PROGETTO                                                          06/08/2018 11:54:21 PAGE 4   

 178   2          TH1 = 0x7d;
 179   2          TL1 = 0xcb; 
 180   2        }
 181   1      }
 182          
 183          void main()
 184          {
 185   1        init();
 186   1        pwm_setup();
 187   1        while(1);
 188   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    297    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
